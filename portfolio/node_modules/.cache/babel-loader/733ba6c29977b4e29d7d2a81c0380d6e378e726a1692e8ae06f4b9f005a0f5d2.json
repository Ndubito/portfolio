{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\Documents\\\\GitHub\\\\portfolio\\\\portfolio\\\\src\\\\components\\\\Projects.js\";\n// Create your Projects component here\nimport React from 'react';\nimport Slider from 'react-slick';\nimport projectsData from '../data/projects.json';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 3,\n    slidesToScroll: 1,\n    responsive: [{\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 1\n      }\n    }, {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"projects\",\n    className: \"projects\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"heading\",\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-container\",\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        ...settings,\n        children: projectsData.projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: project.image || \"/assets/.jpg\",\n              alt: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"name\",\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"description-min\",\n              children: project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"project-button\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: project.link || \"#\",\n                style: {\n                  textDecoration: 'none',\n                  color: 'inherit'\n                },\n                children: \"View Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","Slider","projectsData","jsxDEV","_jsxDEV","Projects","settings","dots","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","projects","map","project","index","src","image","alt","name","description","href","link","style","textDecoration","color","_c","$RefreshReg$"],"sources":["C:/Users/Nathan/Documents/GitHub/portfolio/portfolio/src/components/Projects.js"],"sourcesContent":["// Create your Projects component here\r\nimport React from 'react';\r\nimport Slider from 'react-slick';\r\nimport projectsData from '../data/projects.json';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nconst Projects = () => {\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 1,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 1,\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div id=\"projects\" className=\"projects\">\r\n      <h2 className=\"heading\">Projects</h2>\r\n      <div className=\"projects-container\">\r\n        <Slider {...settings}>\r\n          {projectsData.projects.map((project, index) => (\r\n            <div key={index} className=\"project\">\r\n              <div className=\"content\">\r\n                <img \r\n                  src={project.image || \"/assets/.jpg\"} \r\n                  alt={project.name}\r\n                />\r\n                <h3 className=\"name\">{project.name}</h3>\r\n                <p className=\"description-min\">{project.description}</p>\r\n                <button className=\"project-button\">\r\n                  <a href={project.link || \"#\"} style={{textDecoration: 'none', color: 'inherit'}}>\r\n                    View Project\r\n                  </a>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </Slider>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}